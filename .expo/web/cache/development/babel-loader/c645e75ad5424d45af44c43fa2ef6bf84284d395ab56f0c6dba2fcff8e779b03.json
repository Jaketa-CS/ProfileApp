{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImagePicker from 'react-native-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar UpdateProfilePicture = function UpdateProfilePicture() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    file = _useState2[0],\n    setFile = _useState2[1];\n  var pickImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var options = {\n        mediaType: 'photo'\n      };\n      try {\n        var result = yield ImagePicker.launchImageLibrary(options);\n        if (result.didCancel) {\n          console.log('Image picking cancelled');\n        } else if (result.error) {\n          console.error('Error picking image', result.error);\n        } else {\n          setFile(result.uri);\n        }\n      } catch (error) {\n        console.error('Error picking image', error);\n      }\n    });\n    return function pickImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleUpdate = function handleUpdate() {\n    console.log('Update profile picture logic here');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Add Image:\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.fileInputContainer,\n      onPress: pickImage,\n      children: _jsx(View, {\n        style: styles.imageContainer,\n        children: file ? _jsx(Image, {\n          source: {\n            uri: file\n          },\n          style: styles.image\n        }) : _jsx(Text, {\n          style: styles.fileInputLabel,\n          children: \"Choose Image\"\n        })\n      })\n    }), file && _jsx(TouchableOpacity, {\n      style: styles.updateButton,\n      onPress: handleUpdate,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Update\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16\n  },\n  header: {\n    fontSize: 20,\n    marginBottom: 16\n  },\n  fileInputContainer: {\n    marginBottom: 16\n  },\n  imageContainer: {\n    width: 200,\n    height: 200,\n    borderRadius: 8,\n    backgroundColor: '#e0e0e0',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 8\n  },\n  fileInputLabel: {\n    fontSize: 16,\n    color: '#007AFF',\n    fontWeight: 'bold'\n  },\n  updateButton: {\n    backgroundColor: 'black',\n    padding: 10,\n    borderRadius: 8,\n    marginTop: 16,\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.4,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default UpdateProfilePicture;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","Image","Alert","ImagePicker","jsx","_jsx","jsxs","_jsxs","UpdateProfilePicture","_useState","_useState2","_slicedToArray","file","setFile","pickImage","_ref","_asyncToGenerator","options","mediaType","result","launchImageLibrary","didCancel","console","log","error","uri","apply","arguments","handleUpdate","style","styles","container","children","header","fileInputContainer","onPress","imageContainer","source","image","fileInputLabel","updateButton","buttonText","create","flex","justifyContent","alignItems","padding","fontSize","marginBottom","width","height","borderRadius","backgroundColor","color","fontWeight","marginTop","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"sources":["C:/Users/jteet/Desktop/CODE/profile-app-jteeter/src/UpdateProfilePicture.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Image,\r\n  Alert,\r\n} from 'react-native';\r\nimport ImagePicker from 'react-native-image-picker';\r\n\r\nconst UpdateProfilePicture = () => {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const pickImage = async () => {\r\n    const options = {\r\n      mediaType: 'photo',\r\n    };\r\n\r\n    try {\r\n      const result = await ImagePicker.launchImageLibrary(options);\r\n\r\n      if (result.didCancel) {\r\n        console.log('Image picking cancelled');\r\n      } else if (result.error) {\r\n        console.error('Error picking image', result.error);\r\n      } else {\r\n        setFile(result.uri);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error picking image', error);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    // Implement the logic to update the profile picture in App.js\r\n    console.log('Update profile picture logic here');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Add Image:</Text>\r\n\r\n      {/* Button to choose an image */}\r\n      <TouchableOpacity style={styles.fileInputContainer} onPress={pickImage}>\r\n        <View style={styles.imageContainer}>\r\n          {file ? (\r\n            <Image source={{ uri: file }} style={styles.image} />\r\n          ) : (\r\n            <Text style={styles.fileInputLabel}>Choose Image</Text>\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n\r\n      {/* Button to update profile picture */}\r\n      {file && (\r\n        <TouchableOpacity style={styles.updateButton} onPress={handleUpdate}>\r\n          <Text style={styles.buttonText}>Update</Text>\r\n        </TouchableOpacity>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  header: {\r\n    fontSize: 20,\r\n    marginBottom: 16,\r\n  },\r\n  fileInputContainer: {\r\n    marginBottom: 16,\r\n  },\r\n  imageContainer: {\r\n    width: 200,\r\n    height: 200,\r\n    borderRadius: 8,\r\n    backgroundColor: '#e0e0e0',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: 8,\r\n  },\r\n  fileInputLabel: {\r\n    fontSize: 16,\r\n    color: '#007AFF',\r\n    fontWeight: 'bold',\r\n  },\r\n  updateButton: {\r\n    backgroundColor: 'black',\r\n    padding: 10,\r\n    borderRadius: 8,\r\n    marginTop: 16,\r\n    shadowColor: '#000000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.4,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  buttonText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default UpdateProfilePicture;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,KAAA;AASxC,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;EACjC,IAAAC,SAAA,GAAwBb,QAAQ,CAAC,IAAI,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpB,IAAMI,SAAS;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC5B,IAAMC,OAAO,GAAG;QACdC,SAAS,EAAE;MACb,CAAC;MAED,IAAI;QACF,IAAMC,MAAM,SAAShB,WAAW,CAACiB,kBAAkB,CAACH,OAAO,CAAC;QAE5D,IAAIE,MAAM,CAACE,SAAS,EAAE;UACpBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QACxC,CAAC,MAAM,IAAIJ,MAAM,CAACK,KAAK,EAAE;UACvBF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEL,MAAM,CAACK,KAAK,CAAC;QACpD,CAAC,MAAM;UACLX,OAAO,CAACM,MAAM,CAACM,GAAG,CAAC;QACrB;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC;IAAA,gBAlBKV,SAASA,CAAA;MAAA,OAAAC,IAAA,CAAAW,KAAA,OAAAC,SAAA;IAAA;EAAA,GAkBd;EAED,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IAEzBN,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EAClD,CAAC;EAED,OACEhB,KAAA,CAACV,IAAI;IAACgC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B3B,IAAA,CAACP,IAAI;MAAC+B,KAAK,EAAEC,MAAM,CAACG,MAAO;MAAAD,QAAA,EAAC;IAAU,CAAM,CAAC,EAG7C3B,IAAA,CAACN,gBAAgB;MAAC8B,KAAK,EAAEC,MAAM,CAACI,kBAAmB;MAACC,OAAO,EAAErB,SAAU;MAAAkB,QAAA,EACrE3B,IAAA,CAACR,IAAI;QAACgC,KAAK,EAAEC,MAAM,CAACM,cAAe;QAAAJ,QAAA,EAChCpB,IAAI,GACHP,IAAA,CAACJ,KAAK;UAACoC,MAAM,EAAE;YAAEZ,GAAG,EAAEb;UAAK,CAAE;UAACiB,KAAK,EAAEC,MAAM,CAACQ;QAAM,CAAE,CAAC,GAErDjC,IAAA,CAACP,IAAI;UAAC+B,KAAK,EAAEC,MAAM,CAACS,cAAe;UAAAP,QAAA,EAAC;QAAY,CAAM;MACvD,CACG;IAAC,CACS,CAAC,EAGlBpB,IAAI,IACHP,IAAA,CAACN,gBAAgB;MAAC8B,KAAK,EAAEC,MAAM,CAACU,YAAa;MAACL,OAAO,EAAEP,YAAa;MAAAI,QAAA,EAClE3B,IAAA,CAACP,IAAI;QAAC+B,KAAK,EAAEC,MAAM,CAACW,UAAW;QAAAT,QAAA,EAAC;MAAM,CAAM;IAAC,CAC7B,CACnB;EAAA,CACG,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAG9B,UAAU,CAAC0C,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE;EACX,CAAC;EACDb,MAAM,EAAE;IACNc,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB,CAAC;EACDd,kBAAkB,EAAE;IAClBc,YAAY,EAAE;EAChB,CAAC;EACDZ,cAAc,EAAE;IACda,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,YAAY,EAAE,CAAC;IACfC,eAAe,EAAE,SAAS;IAC1BR,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDP,KAAK,EAAE;IACLW,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE;EAChB,CAAC;EACDZ,cAAc,EAAE;IACdQ,QAAQ,EAAE,EAAE;IACZM,KAAK,EAAE,SAAS;IAChBC,UAAU,EAAE;EACd,CAAC;EACDd,YAAY,EAAE;IACZY,eAAe,EAAE,OAAO;IACxBN,OAAO,EAAE,EAAE;IACXK,YAAY,EAAE,CAAC;IACfI,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,SAAS;IACtBC,YAAY,EAAE;MAAER,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IACrCQ,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb,CAAC;EACDnB,UAAU,EAAE;IACVY,KAAK,EAAE,SAAS;IAChBN,QAAQ,EAAE,EAAE;IACZO,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAe9C,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}