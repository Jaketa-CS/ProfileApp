{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this;\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar UpdateProfilePicture = function UpdateProfilePicture() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    file = _useState2[0],\n    setFile = _useState2[1];\n  var handleFileChange = function handleFileChange(event) {\n    var selectedFile = event.target.files[0];\n    if (selectedFile) {\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        setFile(reader.result);\n      };\n      reader.readAsDataURL(selectedFile);\n    }\n  };\n  var pickImage = function pickImage() {\n    _this.fileInput.click();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Add Image:\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.fileInputContainer,\n      onPress: pickImage,\n      children: _jsx(View, {\n        style: styles.imageContainer,\n        children: file ? _jsx(Image, {\n          source: {\n            uri: file\n          },\n          style: styles.image\n        }) : _jsx(Text, {\n          style: styles.fileInputLabel,\n          children: \"Choose Image\"\n        })\n      })\n    }), _jsx(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      style: {\n        display: 'none'\n      },\n      onChange: handleFileChange,\n      ref: function ref(fileInput) {\n        return _this.fileInput = fileInput;\n      }\n    }), file && _jsx(TouchableOpacity, {\n      style: styles.updateButton,\n      onPress: function onPress() {\n        return console.log('Update');\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Update\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16\n  },\n  header: {\n    fontSize: 20,\n    marginBottom: 16\n  },\n  fileInputContainer: {\n    marginBottom: 16\n  },\n  imageContainer: {\n    width: 200,\n    height: 200,\n    borderRadius: 8,\n    backgroundColor: '#e0e0e0',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 8\n  },\n  fileInputLabel: {\n    fontSize: 16,\n    color: '#007AFF',\n    fontWeight: 'bold'\n  },\n  updateButton: {\n    backgroundColor: 'black',\n    padding: 10,\n    borderRadius: 8,\n    marginTop: 16,\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.4,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default UpdateProfilePicture;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","Image","Alert","jsx","_jsx","jsxs","_jsxs","UpdateProfilePicture","_useState","_useState2","_slicedToArray","file","setFile","handleFileChange","event","selectedFile","target","files","reader","FileReader","onloadend","result","readAsDataURL","pickImage","_this","fileInput","click","style","styles","container","children","header","fileInputContainer","onPress","imageContainer","source","uri","image","fileInputLabel","type","accept","display","onChange","ref","updateButton","console","log","buttonText","create","flex","justifyContent","alignItems","padding","fontSize","marginBottom","width","height","borderRadius","backgroundColor","color","fontWeight","marginTop","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"sources":["C:/Users/jteet/Desktop/CODE/profile-app-jteeter/src/UpdateProfilePicture.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Image,\r\n  Alert,\r\n} from 'react-native';\r\n\r\nconst UpdateProfilePicture = () => {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n\r\n    if (selectedFile) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setFile(reader.result);\r\n      };\r\n      reader.readAsDataURL(selectedFile);\r\n    }\r\n  };\r\n\r\n  const pickImage = () => {\r\n    this.fileInput.click();\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Add Image:</Text>\r\n\r\n      {/* Custom file input button with image preview */}\r\n      <TouchableOpacity style={styles.fileInputContainer} onPress={pickImage}>\r\n        <View style={styles.imageContainer}>\r\n          {file ? (\r\n            <Image source={{ uri: file }} style={styles.image} />\r\n          ) : (\r\n            <Text style={styles.fileInputLabel}>Choose Image</Text>\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n\r\n      {/* Hidden file input */}\r\n      <input\r\n        type='file'\r\n        accept='image/*'\r\n        style={{ display: 'none' }}\r\n        onChange={handleFileChange}\r\n        ref={(fileInput) => (this.fileInput = fileInput)}\r\n      />\r\n\r\n      {/* Button to update profile picture */}\r\n      {file && (\r\n        <TouchableOpacity\r\n          style={styles.updateButton}\r\n          onPress={() => console.log('Update')}\r\n        >\r\n          <Text style={styles.buttonText}>Update</Text>\r\n        </TouchableOpacity>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  header: {\r\n    fontSize: 20,\r\n    marginBottom: 16,\r\n  },\r\n  fileInputContainer: {\r\n    marginBottom: 16,\r\n  },\r\n  imageContainer: {\r\n    width: 200,\r\n    height: 200,\r\n    borderRadius: 8,\r\n    backgroundColor: '#e0e0e0',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: 8,\r\n  },\r\n  fileInputLabel: {\r\n    fontSize: 16,\r\n    color: '#007AFF',\r\n    fontWeight: 'bold',\r\n  },\r\n  updateButton: {\r\n    backgroundColor: 'black',\r\n    padding: 10,\r\n    borderRadius: 8,\r\n    marginTop: 16,\r\n    shadowColor: '#000000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.4,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  buttonText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default UpdateProfilePicture;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}