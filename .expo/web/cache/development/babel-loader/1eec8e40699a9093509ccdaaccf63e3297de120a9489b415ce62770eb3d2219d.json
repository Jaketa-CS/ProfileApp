{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNavigation } from '@react-navigation/native';\nimport ImagePicker from 'react-native-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SERVER_URL = 'http://localhost:3000';\nvar createFormData = function createFormData(photo) {\n  var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var data = new FormData();\n  data.append('photo', {\n    name: photo.fileName,\n    type: photo.type,\n    uri: Platform.OS === 'ios' ? photo.uri.replace('file://', '') : photo.uri\n  });\n  Object.keys(body).forEach(function (key) {\n    data.append(key, body[key]);\n  });\n  return data;\n};\nvar UpdateProfilePicture = function UpdateProfilePicture() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    profilePicture = _useState2[0],\n    setProfilePicture = _useState2[1];\n  var navigation = useNavigation();\n  var handleSelectImage = function handleSelectImage() {\n    ImagePicker.showImagePicker({\n      title: 'Select Image'\n    }, function (response) {\n      if (!response.didCancel && !response.error) {\n        setProfilePicture(response);\n      }\n    });\n  };\n  var handleUploadProfilePicture = function handleUploadProfilePicture() {\n    if (profilePicture) {\n      fetch(`${SERVER_URL}/api/upload`, {\n        method: 'POST',\n        body: createFormData(profilePicture, {\n          userId: '123'\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        console.log('Profile picture uploaded:', response);\n        navigation.goBack();\n      }).catch(function (error) {\n        console.error('Error uploading profile picture:', error);\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Update Profile Picture\"\n    }), profilePicture && _jsxs(_Fragment, {\n      children: [_jsx(Image, {\n        source: {\n          uri: profilePicture.uri\n        },\n        style: styles.profilePicture\n      }), _jsx(Button, {\n        title: \"Upload Profile Picture\",\n        onPress: handleUploadProfilePicture\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.selectImageButton,\n      onPress: handleSelectImage,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Select Image\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  profilePicture: {\n    width: 200,\n    height: 200,\n    borderRadius: 100,\n    marginBottom: 20\n  },\n  selectImageButton: {\n    backgroundColor: 'darkturquoise',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    marginBottom: 20\n  },\n  saveButton: {\n    backgroundColor: 'black',\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 20\n  }\n});\nexport default UpdateProfilePicture;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","Image","Button","Platform","useNavigation","ImagePicker","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","SERVER_URL","createFormData","photo","body","arguments","length","undefined","data","FormData","append","name","fileName","type","uri","OS","replace","Object","keys","forEach","key","UpdateProfilePicture","_useState","_useState2","_slicedToArray","profilePicture","setProfilePicture","navigation","handleSelectImage","showImagePicker","title","response","didCancel","error","handleUploadProfilePicture","fetch","method","userId","then","json","console","log","goBack","catch","style","styles","container","children","source","onPress","selectImageButton","buttonText","create","flex","alignItems","justifyContent","backgroundColor","fontSize","fontWeight","marginBottom","width","height","borderRadius","paddingVertical","paddingHorizontal","saveButton","color"],"sources":["C:/Users/jteet/Desktop/CODE/profile-app-jteeter/src/UpdateProfilePicture.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Image,\r\n  Button,\r\n  Platform,\r\n} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport ImagePicker from 'react-native-image-picker';\r\n\r\nconst SERVER_URL = 'http://localhost:3000';\r\n\r\nconst createFormData = (photo, body = {}) => {\r\n  const data = new FormData();\r\n\r\n  data.append('photo', {\r\n    name: photo.fileName,\r\n    type: photo.type,\r\n    uri: Platform.OS === 'ios' ? photo.uri.replace('file://', '') : photo.uri,\r\n  });\r\n\r\n  Object.keys(body).forEach((key) => {\r\n    data.append(key, body[key]);\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\nconst UpdateProfilePicture = () => {\r\n  const [profilePicture, setProfilePicture] = useState(null);\r\n  const navigation = useNavigation();\r\n\r\n  const handleSelectImage = () => {\r\n    ImagePicker.showImagePicker({ title: 'Select Image' }, (response) => {\r\n      if (!response.didCancel && !response.error) {\r\n        setProfilePicture(response);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleUploadProfilePicture = () => {\r\n    if (profilePicture) {\r\n      fetch(`${SERVER_URL}/api/upload`, {\r\n        method: 'POST',\r\n        body: createFormData(profilePicture, { userId: '123' }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          console.log('Profile picture uploaded:', response);\r\n          // You can handle further logic after successful upload\r\n          navigation.goBack(); // Navigate back to the HomeScreen or any other screen\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error uploading profile picture:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Update Profile Picture</Text>\r\n\r\n      {profilePicture && (\r\n        <>\r\n          <Image\r\n            source={{ uri: profilePicture.uri }}\r\n            style={styles.profilePicture}\r\n          />\r\n          <Button\r\n            title='Upload Profile Picture'\r\n            onPress={handleUploadProfilePicture}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      <TouchableOpacity\r\n        style={styles.selectImageButton}\r\n        onPress={handleSelectImage}\r\n      >\r\n        <Text style={styles.buttonText}>Select Image</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  profilePicture: {\r\n    width: 200,\r\n    height: 200,\r\n    borderRadius: 100,\r\n    marginBottom: 20,\r\n  },\r\n  selectImageButton: {\r\n    backgroundColor: 'darkturquoise',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    marginBottom: 20,\r\n  },\r\n  saveButton: {\r\n    backgroundColor: 'black',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 20,\r\n  },\r\n});\r\n\r\nexport default UpdateProfilePicture;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}