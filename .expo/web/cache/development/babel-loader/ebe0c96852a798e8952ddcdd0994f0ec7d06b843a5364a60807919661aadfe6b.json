{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport UpdateName from \"./UpdateName\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState('Micah Smith'),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var handleEditName = function handleEditName(newName) {\n    setName(newName);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.title,\n        children: \"Edit Profile\"\n      })\n    }), _jsxs(View, {\n      style: styles.profileSection,\n      children: [_jsx(Text, {\n        style: styles.profileText,\n        children: \"Name\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.editButton,\n        onPress: function onPress() {\n          return navigation.navigate('UpdateName', {\n            handleEditName: handleEditName\n          });\n        },\n        children: _jsxs(View, {\n          style: styles.itemContainer,\n          children: [_jsx(View, {\n            style: styles.itemLeft,\n            children: _jsx(Text, {\n              style: styles.itemText,\n              children: name\n            })\n          }), _jsx(Text, {\n            style: styles.itemRight,\n            children: ' ›'\n          })]\n        })\n      })]\n    })]\n  });\n};\nvar Stack = createStackNavigator();\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"UpdateName\",\n        component: UpdateName\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  header: {\n    padding: 15,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'darkturquoise'\n  },\n  profileSection: {\n    padding: 25,\n    margin: 20\n  },\n  profileText: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    marginBottom: 0,\n    opacity: 0.3\n  },\n  editButton: {\n    backgroundColor: 'white',\n    padding: 1,\n    alignSelf: 'flex-start',\n    width: 600,\n    borderBottomColor: 'black',\n    borderBottomWidth: 2\n  },\n  itemContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  itemText: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  itemLeft: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  itemRight: {\n    fontSize: 60\n  }\n});\nexport default App;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","TextInput","NavigationContainer","createStackNavigator","UpdateName","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","name","setName","handleEditName","newName","style","styles","container","children","header","title","profileSection","profileText","editButton","onPress","navigate","itemContainer","itemLeft","itemText","itemRight","Stack","App","Navigator","initialRouteName","Screen","component","options","headerShown","create","flex","backgroundColor","padding","alignItems","fontSize","fontWeight","color","margin","marginBottom","opacity","alignSelf","width","borderBottomColor","borderBottomWidth","flexDirection","justifyContent"],"sources":["C:/Users/jteet/Desktop/CODE/profile-app-jteeter/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  TextInput,\n} from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport UpdateName from './UpdateName';\n\nconst HomeScreen = ({ navigation }) => {\n  const [name, setName] = useState('Micah Smith');\n  const handleEditName = (newName) => {\n    setName(newName);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Edit Profile</Text>\n      </View>\n\n      <View style={styles.profileSection}>\n        <Text style={styles.profileText}>Name</Text>\n        <TouchableOpacity\n          style={styles.editButton}\n          onPress={() => navigation.navigate('UpdateName', { handleEditName })}\n        >\n          <View style={styles.itemContainer}>\n            <View style={styles.itemLeft}>\n              <Text style={styles.itemText}>{name}</Text>\n            </View>\n            <Text style={styles.itemRight}>{' ›'}</Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName='Home'>\n        <Stack.Screen\n          name='Home'\n          component={HomeScreen}\n          options={{ headerShown: false }} // Hide the header\n        />\n        <Stack.Screen name='UpdateName' component={UpdateName} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n  },\n  header: {\n    padding: 15,\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'darkturquoise',\n  },\n  profileSection: {\n    padding: 25,\n    margin: 20,\n  },\n  profileText: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    marginBottom: 0,\n    opacity: 0.3,\n  },\n  editButton: {\n    backgroundColor: 'white',\n    padding: 1,\n    alignSelf: 'flex-start',\n    width: 600,\n    borderBottomColor: 'black',\n    borderBottomWidth: 2,\n  },\n  itemContainer: {\n    flexDirection: 'row', // Align items horizontally\n    alignItems: 'center', // Center items vertically\n    justifyContent: 'space-between', // Add space between items\n  },\n  itemText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  itemLeft: {\n    flexDirection: 'row', // Align items horizontally\n    alignItems: 'center', // Center items vertically\n  },\n\n  itemRight: {\n    fontSize: 60,\n  },\n});\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAQxC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,UAAU;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtC,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC9B,IAAAC,SAAA,GAAwBhB,QAAQ,CAAC,aAAa,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxCG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,OAAO,EAAK;IAClCF,OAAO,CAACE,OAAO,CAAC;EAClB,CAAC;EAED,OACEV,KAAA,CAACX,IAAI;IAACsB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BhB,IAAA,CAACT,IAAI;MAACsB,KAAK,EAAEC,MAAM,CAACG,MAAO;MAAAD,QAAA,EACzBhB,IAAA,CAACR,IAAI;QAACqB,KAAK,EAAEC,MAAM,CAACI,KAAM;QAAAF,QAAA,EAAC;MAAY,CAAM;IAAC,CAC1C,CAAC,EAEPd,KAAA,CAACX,IAAI;MAACsB,KAAK,EAAEC,MAAM,CAACK,cAAe;MAAAH,QAAA,GACjChB,IAAA,CAACR,IAAI;QAACqB,KAAK,EAAEC,MAAM,CAACM,WAAY;QAAAJ,QAAA,EAAC;MAAI,CAAM,CAAC,EAC5ChB,IAAA,CAACP,gBAAgB;QACfoB,KAAK,EAAEC,MAAM,CAACO,UAAW;QACzBC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMjB,UAAU,CAACkB,QAAQ,CAAC,YAAY,EAAE;YAAEZ,cAAc,EAAdA;UAAe,CAAC,CAAC;QAAA,CAAC;QAAAK,QAAA,EAErEd,KAAA,CAACX,IAAI;UAACsB,KAAK,EAAEC,MAAM,CAACU,aAAc;UAAAR,QAAA,GAChChB,IAAA,CAACT,IAAI;YAACsB,KAAK,EAAEC,MAAM,CAACW,QAAS;YAAAT,QAAA,EAC3BhB,IAAA,CAACR,IAAI;cAACqB,KAAK,EAAEC,MAAM,CAACY,QAAS;cAAAV,QAAA,EAAEP;YAAI,CAAO;UAAC,CACvC,CAAC,EACPT,IAAA,CAACR,IAAI;YAACqB,KAAK,EAAEC,MAAM,CAACa,SAAU;YAAAX,QAAA,EAAE;UAAI,CAAO,CAAC;QAAA,CACxC;MAAC,CACS,CAAC;IAAA,CACf,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMY,KAAK,GAAG/B,oBAAoB,CAAC,CAAC;AAEpC,IAAMgC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,OACE7B,IAAA,CAACJ,mBAAmB;IAAAoB,QAAA,EAClBd,KAAA,CAAC0B,KAAK,CAACE,SAAS;MAACC,gBAAgB,EAAC,MAAM;MAAAf,QAAA,GACtChB,IAAA,CAAC4B,KAAK,CAACI,MAAM;QACXvB,IAAI,EAAC,MAAM;QACXwB,SAAS,EAAE9B,UAAW;QACtB+B,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACjC,CAAC,EACFnC,IAAA,CAAC4B,KAAK,CAACI,MAAM;QAACvB,IAAI,EAAC,YAAY;QAACwB,SAAS,EAAEnC;MAAW,CAAE,CAAC;IAAA,CAC1C;EAAC,CACC,CAAC;AAE1B,CAAC;AAED,IAAMgB,MAAM,GAAGpB,UAAU,CAAC0C,MAAM,CAAC;EAC/BrB,SAAS,EAAE;IACTsB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDrB,MAAM,EAAE;IACNsB,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE;EACd,CAAC;EACDtB,KAAK,EAAE;IACLuB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACT,CAAC;EACDxB,cAAc,EAAE;IACdoB,OAAO,EAAE,EAAE;IACXK,MAAM,EAAE;EACV,CAAC;EACDxB,WAAW,EAAE;IACXqB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBG,YAAY,EAAE,CAAC;IACfC,OAAO,EAAE;EACX,CAAC;EACDzB,UAAU,EAAE;IACViB,eAAe,EAAE,OAAO;IACxBC,OAAO,EAAE,CAAC;IACVQ,SAAS,EAAE,YAAY;IACvBC,KAAK,EAAE,GAAG;IACVC,iBAAiB,EAAE,OAAO;IAC1BC,iBAAiB,EAAE;EACrB,CAAC;EACD1B,aAAa,EAAE;IACb2B,aAAa,EAAE,KAAK;IACpBX,UAAU,EAAE,QAAQ;IACpBY,cAAc,EAAE;EAClB,CAAC;EACD1B,QAAQ,EAAE;IACRe,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDjB,QAAQ,EAAE;IACR0B,aAAa,EAAE,KAAK;IACpBX,UAAU,EAAE;EACd,CAAC;EAEDb,SAAS,EAAE;IACTc,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAeZ,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}