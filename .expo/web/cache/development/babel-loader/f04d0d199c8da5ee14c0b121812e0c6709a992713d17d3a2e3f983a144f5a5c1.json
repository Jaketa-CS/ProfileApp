{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar UpdatePhoneNumber = function UpdatePhoneNumber(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    phoneNumber = _useState2[0],\n    setPhoneNumber = _useState2[1];\n  var handleSavePhoneNumber = function handleSavePhoneNumber() {\n    var handleEditPhoneNumber = route.params.handleEditPhoneNumber;\n    if (/^\\d+$/.test(phoneNumber)) {\n      handleEditPhoneNumber(phoneNumber);\n      navigation.goBack();\n    } else {\n      alert('Please enter a valid phone number (digits only).');\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"What's your phone number?\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Your phone number\",\n      keyboardType: \"numeric\",\n      value: phoneNumber,\n      onChangeText: function onChangeText(text) {\n        return setPhoneNumber(text);\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.updateButton,\n      onPress: handleSavePhoneNumber,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Update\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    backgroundColor: 'white',\n    paddingTop: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: '#FFF',\n    borderRadius: 10,\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n    marginBottom: 20,\n    width: 250\n  },\n  updateButton: {\n    backgroundColor: 'black',\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 20\n  }\n});\nexport default UpdatePhoneNumber;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","jsx","_jsx","jsxs","_jsxs","UpdatePhoneNumber","_ref","navigation","route","_useState","_useState2","_slicedToArray","phoneNumber","setPhoneNumber","handleSavePhoneNumber","handleEditPhoneNumber","params","test","goBack","alert","style","styles","container","children","title","input","placeholder","keyboardType","value","onChangeText","text","updateButton","onPress","buttonText","create","flex","alignItems","justifyContent","backgroundColor","paddingTop","fontSize","fontWeight","marginBottom","paddingVertical","paddingHorizontal","borderRadius","borderColor","borderWidth","width","color"],"sources":["C:/Users/jteet/Desktop/CODE/profile-app-jteeter/src/UpdatePhone.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n} from 'react-native';\r\n\r\nconst UpdatePhoneNumber = ({ navigation, route }) => {\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n\r\n  const handleSavePhoneNumber = () => {\r\n    const { handleEditPhoneNumber } = route.params;\r\n\r\n    // Validate if the entered value is an integer\r\n    if (/^\\d+$/.test(phoneNumber)) {\r\n      handleEditPhoneNumber(phoneNumber);\r\n      navigation.goBack();\r\n    } else {\r\n      // Handle invalid input (not an integer)\r\n      alert('Please enter a valid phone number (digits only).');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>What's your phone number?</Text>\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder='Your phone number'\r\n        keyboardType='numeric' // Only allow numeric input\r\n        value={phoneNumber}\r\n        onChangeText={(text) => setPhoneNumber(text)}\r\n      />\r\n\r\n      <TouchableOpacity\r\n        style={styles.updateButton}\r\n        onPress={handleSavePhoneNumber}\r\n      >\r\n        <Text style={styles.buttonText}>Update</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    backgroundColor: 'white',\r\n    paddingTop: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    backgroundColor: '#FFF',\r\n    borderRadius: 10,\r\n    borderColor: '#C0C0C0',\r\n    borderWidth: 1,\r\n    marginBottom: 20,\r\n    width: 250,\r\n  },\r\n  updateButton: {\r\n    backgroundColor: 'black',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 20,\r\n  },\r\n});\r\n\r\nexport default UpdatePhoneNumber;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AASxC,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,IAAA,EAA8B;EAAA,IAAxBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;EAC5C,IAAAC,SAAA,GAAsCd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAElC,IAAMI,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAAS;IAClC,IAAQC,qBAAqB,GAAKP,KAAK,CAACQ,MAAM,CAAtCD,qBAAqB;IAG7B,IAAI,OAAO,CAACE,IAAI,CAACL,WAAW,CAAC,EAAE;MAC7BG,qBAAqB,CAACH,WAAW,CAAC;MAClCL,UAAU,CAACW,MAAM,CAAC,CAAC;IACrB,CAAC,MAAM;MAELC,KAAK,CAAC,kDAAkD,CAAC;IAC3D;EACF,CAAC;EAED,OACEf,KAAA,CAACR,IAAI;IAACwB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BrB,IAAA,CAACL,IAAI;MAACuB,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAyB,CAAM,CAAC,EAE3DrB,IAAA,CAACJ,SAAS;MACRsB,KAAK,EAAEC,MAAM,CAACI,KAAM;MACpBC,WAAW,EAAC,mBAAmB;MAC/BC,YAAY,EAAC,SAAS;MACtBC,KAAK,EAAEhB,WAAY;MACnBiB,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKjB,cAAc,CAACiB,IAAI,CAAC;MAAA;IAAC,CAC9C,CAAC,EAEF5B,IAAA,CAACH,gBAAgB;MACfqB,KAAK,EAAEC,MAAM,CAACU,YAAa;MAC3BC,OAAO,EAAElB,qBAAsB;MAAAS,QAAA,EAE/BrB,IAAA,CAACL,IAAI;QAACuB,KAAK,EAAEC,MAAM,CAACY,UAAW;QAAAV,QAAA,EAAC;MAAM,CAAM;IAAC,CAC7B,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGrB,UAAU,CAACkC,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,YAAY;IAC5BC,eAAe,EAAE,OAAO;IACxBC,UAAU,EAAE;EACd,CAAC;EACDf,KAAK,EAAE;IACLgB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDjB,KAAK,EAAE;IACLkB,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBN,eAAe,EAAE,MAAM;IACvBO,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE,CAAC;IACdL,YAAY,EAAE,EAAE;IAChBM,KAAK,EAAE;EACT,CAAC;EACDjB,YAAY,EAAE;IACZO,eAAe,EAAE,OAAO;IACxBK,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE;EACrB,CAAC;EACDX,UAAU,EAAE;IACVgB,KAAK,EAAE,OAAO;IACdT,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAenC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}