{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useNavigation } from '@react-navigation/native';\nimport ImagePicker from 'react-native-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar UpdateProfilePicture = function UpdateProfilePicture() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    profilePicture = _useState2[0],\n    setProfilePicture = _useState2[1];\n  var navigation = useNavigation();\n  var handleSelectImage = function handleSelectImage() {\n    ImagePicker.showImagePicker({\n      title: 'Select Image'\n    }, function (response) {\n      if (!response.didCancel && !response.error) {\n        setProfilePicture(response.uri);\n      }\n    });\n  };\n  var handleSaveProfilePicture = function handleSaveProfilePicture() {\n    navigation.goBack();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Update Profile Picture\"\n    }), profilePicture && _jsx(Image, {\n      source: {\n        uri: profilePicture\n      },\n      style: styles.profilePicture\n    }), _jsx(TouchableOpacity, {\n      style: styles.selectImageButton,\n      onPress: handleSelectImage,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Select Image\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.saveButton,\n      onPress: handleSaveProfilePicture,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Save\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  profilePicture: {\n    width: 200,\n    height: 200,\n    borderRadius: 100,\n    marginBottom: 20\n  },\n  selectImageButton: {\n    backgroundColor: 'darkturquoise',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    marginBottom: 20\n  },\n  saveButton: {\n    backgroundColor: 'black',\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 20\n  }\n});\nexport default UpdateProfilePicture;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","Image","useNavigation","ImagePicker","jsx","_jsx","jsxs","_jsxs","UpdateProfilePicture","_useState","_useState2","_slicedToArray","profilePicture","setProfilePicture","navigation","handleSelectImage","showImagePicker","title","response","didCancel","error","uri","handleSaveProfilePicture","goBack","style","styles","container","children","source","selectImageButton","onPress","buttonText","saveButton","create","flex","alignItems","justifyContent","backgroundColor","fontSize","fontWeight","marginBottom","width","height","borderRadius","paddingVertical","paddingHorizontal","color"],"sources":["C:/Users/jteet/Desktop/CODE/profile-app-jteeter/src/UpdateProfilePicture.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, Image } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport ImagePicker from 'react-native-image-picker';\r\n\r\nconst UpdateProfilePicture = () => {\r\n  const [profilePicture, setProfilePicture] = useState(null);\r\n  const navigation = useNavigation();\r\n\r\n  const handleSelectImage = () => {\r\n    ImagePicker.showImagePicker({ title: 'Select Image' }, (response) => {\r\n      if (!response.didCancel && !response.error) {\r\n        setProfilePicture(response.uri);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSaveProfilePicture = () => {\r\n    // Implement the logic to save the profile picture (e.g., upload to a server)\r\n    // ...\r\n\r\n    // After saving, navigate back to the HomeScreen\r\n    navigation.goBack();\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Update Profile Picture</Text>\r\n\r\n      {profilePicture && (\r\n        <Image source={{ uri: profilePicture }} style={styles.profilePicture} />\r\n      )}\r\n\r\n      <TouchableOpacity\r\n        style={styles.selectImageButton}\r\n        onPress={handleSelectImage}\r\n      >\r\n        <Text style={styles.buttonText}>Select Image</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={styles.saveButton}\r\n        onPress={handleSaveProfilePicture}\r\n      >\r\n        <Text style={styles.buttonText}>Save</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  profilePicture: {\r\n    width: 200,\r\n    height: 200,\r\n    borderRadius: 100,\r\n    marginBottom: 20,\r\n  },\r\n  selectImageButton: {\r\n    backgroundColor: 'darkturquoise',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    marginBottom: 20,\r\n  },\r\n  saveButton: {\r\n    backgroundColor: 'black',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 20,\r\n  },\r\n});\r\n\r\nexport default UpdateProfilePicture;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}