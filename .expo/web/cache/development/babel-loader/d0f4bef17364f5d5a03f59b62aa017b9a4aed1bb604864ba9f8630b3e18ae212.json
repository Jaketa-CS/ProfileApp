{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar UpdateProfilePicture = function UpdateProfilePicture(_ref) {\n  var _route$params, _route$params3;\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(((_route$params = route.params) == null ? void 0 : _route$params.newProfilePicture) || null),\n    _useState2 = _slicedToArray(_useState, 2),\n    file = _useState2[0],\n    setFile = _useState2[1];\n  useEffect(function () {\n    var _route$params2;\n    if ((_route$params2 = route.params) != null && _route$params2.newProfilePicture) {\n      setFile(route.params.newProfilePicture);\n    }\n  }, [(_route$params3 = route.params) == null ? void 0 : _route$params3.newProfilePicture]);\n  var forceUpdate = React.useReducer(function () {\n    return {};\n  })[1];\n  var pickImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setFile(null);\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [1, 1],\n        quality: 1\n      });\n      if (!result.cancelled) {\n        setFile(result.uri);\n        forceUpdate();\n      }\n    });\n    return function pickImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleUpdate = function handleUpdate() {\n    route.params.handleProfilePictureUpdate(file);\n    navigation.goBack();\n  };\n  var handleRedirect = function handleRedirect() {\n    if (file) {\n      navigation.navigate('App', {\n        newImageURI: file\n      });\n    } else {\n      navigation.navigate('App', {\n        newImageURI: file\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Add Image:\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.fileInputContainer,\n      onPress: pickImage,\n      children: file ? _jsx(Image, {\n        source: {\n          uri: file\n        },\n        style: styles.image\n      }) : _jsx(Text, {\n        style: styles.fileInputLabel,\n        children: \"Choose Image\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.redirectButton,\n      onPress: handleRedirect,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Update\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16\n  },\n  header: {\n    fontSize: 20,\n    marginBottom: 16\n  },\n  fileInputContainer: {\n    marginBottom: 16,\n    width: 200,\n    height: 200,\n    borderRadius: 8,\n    backgroundColor: '#e0e0e0',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 8\n  },\n  fileInputLabel: {\n    fontSize: 16,\n    color: '#007AFF',\n    fontWeight: 'bold'\n  },\n  redirectButton: {\n    backgroundColor: 'black',\n    padding: 10,\n    borderRadius: 10,\n    marginTop: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.4,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default UpdateProfilePicture;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","StyleSheet","Image","ImagePicker","jsx","_jsx","jsxs","_jsxs","UpdateProfilePicture","_ref","_route$params","_route$params3","route","navigation","_useState","params","newProfilePicture","_useState2","_slicedToArray","file","setFile","_route$params2","forceUpdate","useReducer","pickImage","_ref2","_asyncToGenerator","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","cancelled","uri","apply","arguments","handleUpdate","handleProfilePictureUpdate","goBack","handleRedirect","navigate","newImageURI","style","styles","container","children","header","fileInputContainer","onPress","source","image","fileInputLabel","redirectButton","buttonText","create","flex","justifyContent","alignItems","padding","fontSize","marginBottom","width","height","borderRadius","backgroundColor","color","fontWeight","marginTop","shadowOffset","shadowOpacity","shadowRadius","elevation"],"sources":["C:/Users/jteet/Desktop/CODE/profile-app-jteeter/src/UpdateProfilePicture.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, Image } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nconst UpdateProfilePicture = ({ route, navigation }) => {\r\n  const [file, setFile] = useState(route.params?.newProfilePicture || null);\r\n\r\n  useEffect(() => {\r\n    if (route.params?.newProfilePicture) {\r\n      setFile(route.params.newProfilePicture);\r\n    }\r\n  }, [route.params?.newProfilePicture]);\r\n\r\n  const forceUpdate = React.useReducer(() => ({}))[1];\r\n\r\n  const pickImage = async () => {\r\n    setFile(null); // Reset file to null to force a re-render\r\n\r\n    const result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [1, 1],\r\n      quality: 1,\r\n    });\r\n\r\n    if (!result.cancelled) {\r\n      setFile(result.uri);\r\n      forceUpdate(); // Force re-render\r\n    }\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    route.params.handleProfilePictureUpdate(file);\r\n    navigation.goBack();\r\n  };\r\n\r\n  const handleRedirect = () => {\r\n    if (file) {\r\n      navigation.navigate('App', { newImageURI: file });\r\n    } else {\r\n      navigation.navigate('App', { newImageURI: file });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Add Image:</Text>\r\n\r\n      {/* Button to choose an image */}\r\n      <TouchableOpacity style={styles.fileInputContainer} onPress={pickImage}>\r\n        {file ? (\r\n          <Image source={{ uri: file }} style={styles.image} />\r\n        ) : (\r\n          <Text style={styles.fileInputLabel}>Choose Image</Text>\r\n        )}\r\n      </TouchableOpacity>\r\n\r\n      {/* New button for redirecting with the new image */}\r\n      <TouchableOpacity style={styles.redirectButton} onPress={handleRedirect}>\r\n        <Text style={styles.buttonText}>Update</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  header: {\r\n    fontSize: 20,\r\n    marginBottom: 16,\r\n  },\r\n  fileInputContainer: {\r\n    marginBottom: 16,\r\n    width: 200,\r\n    height: 200,\r\n    borderRadius: 8,\r\n    backgroundColor: '#e0e0e0',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: 8,\r\n  },\r\n  fileInputLabel: {\r\n    fontSize: 16,\r\n    color: '#007AFF',\r\n    fontWeight: 'bold',\r\n  },\r\n  redirectButton: {\r\n    backgroundColor: 'black',\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginTop: 15,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.4,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  buttonText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default UpdateProfilePicture;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}