{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar UpdateProfilePicture = function UpdateProfilePicture(_ref) {\n  var _route$params, _route$params3;\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(((_route$params = route.params) == null ? void 0 : _route$params.newProfilePicture) || null),\n    _useState2 = _slicedToArray(_useState, 2),\n    file = _useState2[0],\n    setFile = _useState2[1];\n  useEffect(function () {\n    var _route$params2;\n    if ((_route$params2 = route.params) != null && _route$params2.newProfilePicture) {\n      setFile(route.params.newProfilePicture);\n    }\n  }, [(_route$params3 = route.params) == null ? void 0 : _route$params3.newProfilePicture]);\n  var forceUpdate = React.useReducer(function () {\n    return {};\n  })[1];\n  var pickImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setFile(null);\n      var _yield$ImagePicker$re = yield ImagePicker.requestMediaLibraryPermissionsAsync(),\n        status = _yield$ImagePicker$re.status;\n      if (status !== 'granted') {\n        alert('Sorry, we need camera roll permissions to make this work!');\n        return;\n      }\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [1, 1],\n        quality: 1\n      });\n      if (!result.cancelled) {\n        setFile(result.uri);\n        forceUpdate();\n      }\n    });\n    return function pickImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleUpdate = function handleUpdate() {\n    route.params.handleProfilePictureUpdate(file);\n    navigation.goBack();\n  };\n  var handleRedirect = function handleRedirect() {\n    if (file) {\n      navigation.navigate('App', {\n        newImageURI: file\n      });\n    } else {\n      alert('Please choose an image before redirecting.');\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Add Image:\"\n    }), _jsx(TouchableOpacity, {\n      style: [styles.fileInputContainer, {\n        backgroundColor: file ? 'transparent' : '#e0e0e0'\n      }],\n      onPress: pickImage,\n      children: _jsx(ImageBackground, {\n        source: file ? {\n          uri: file\n        } : null,\n        style: styles.imageContainer,\n        imageStyle: styles.image,\n        children: !file && _jsx(Text, {\n          style: styles.fileInputLabel,\n          children: \"Choose Image\"\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.redirectButton,\n      onPress: handleRedirect,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Update\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16\n  },\n  header: {\n    fontSize: 20,\n    marginBottom: 16\n  },\n  fileInputContainer: {\n    marginBottom: 16,\n    width: 200,\n    height: 200,\n    borderRadius: 8,\n    backgroundColor: '#e0e0e0',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  imageContainer: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 8,\n    overflow: 'hidden'\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 8\n  },\n  fileInputLabel: {\n    fontSize: 16,\n    color: '#007AFF',\n    fontWeight: 'bold'\n  },\n  updateButton: {\n    backgroundColor: 'black',\n    padding: 10,\n    borderRadius: 8,\n    marginTop: 16,\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.4,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  redirectButton: {\n    backgroundColor: 'black',\n    padding: 10,\n    borderRadius: 10,\n    marginTop: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.4,\n    shadowRadius: 4,\n    elevation: 5\n  }\n});\nexport default UpdateProfilePicture;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","StyleSheet","Image","ImageBackground","ImagePicker","jsx","_jsx","jsxs","_jsxs","UpdateProfilePicture","_ref","_route$params","_route$params3","route","navigation","_useState","params","newProfilePicture","_useState2","_slicedToArray","file","setFile","_route$params2","forceUpdate","useReducer","pickImage","_ref2","_asyncToGenerator","_yield$ImagePicker$re","requestMediaLibraryPermissionsAsync","status","alert","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","cancelled","uri","apply","arguments","handleUpdate","handleProfilePictureUpdate","goBack","handleRedirect","navigate","newImageURI","style","styles","container","children","header","fileInputContainer","backgroundColor","onPress","source","imageContainer","imageStyle","image","fileInputLabel","redirectButton","buttonText","create","flex","justifyContent","alignItems","padding","fontSize","marginBottom","width","height","borderRadius","overflow","color","fontWeight","updateButton","marginTop","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"sources":["C:/Users/jteet/Desktop/CODE/profile-app-jteeter/src/UpdateProfilePicture.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Image,\r\n  ImageBackground,\r\n} from 'react-native'; // Import ImageBackground\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nconst UpdateProfilePicture = ({ route, navigation }) => {\r\n  const [file, setFile] = useState(route.params?.newProfilePicture || null);\r\n\r\n  useEffect(() => {\r\n    if (route.params?.newProfilePicture) {\r\n      setFile(route.params.newProfilePicture);\r\n    }\r\n  }, [route.params?.newProfilePicture]);\r\n\r\n  const forceUpdate = React.useReducer(() => ({}))[1];\r\n\r\n  const pickImage = async () => {\r\n    setFile(null); // Reset file to null to force a re-render\r\n\r\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (status !== 'granted') {\r\n      alert('Sorry, we need camera roll permissions to make this work!');\r\n      return;\r\n    }\r\n\r\n    const result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [1, 1],\r\n      quality: 1,\r\n    });\r\n\r\n    if (!result.cancelled) {\r\n      setFile(result.uri);\r\n      forceUpdate(); // Force re-render\r\n    }\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    route.params.handleProfilePictureUpdate(file);\r\n    navigation.goBack();\r\n  };\r\n\r\n  const handleRedirect = () => {\r\n    if (file) {\r\n      navigation.navigate('App', { newImageURI: file });\r\n    } else {\r\n      alert('Please choose an image before redirecting.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Add Image:</Text>\r\n\r\n      {/* Button to choose an image */}\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.fileInputContainer,\r\n          { backgroundColor: file ? 'transparent' : '#e0e0e0' },\r\n        ]}\r\n        onPress={pickImage}\r\n      >\r\n        <ImageBackground\r\n          source={file ? { uri: file } : null}\r\n          style={styles.imageContainer}\r\n          imageStyle={styles.image}\r\n        >\r\n          {!file && <Text style={styles.fileInputLabel}>Choose Image</Text>}\r\n        </ImageBackground>\r\n      </TouchableOpacity>\r\n\r\n      {/* New button for redirecting with the new image */}\r\n      <TouchableOpacity style={styles.redirectButton} onPress={handleRedirect}>\r\n        <Text style={styles.buttonText}>Update</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  header: {\r\n    fontSize: 20,\r\n    marginBottom: 16,\r\n  },\r\n  fileInputContainer: {\r\n    marginBottom: 16,\r\n    width: 200,\r\n    height: 200,\r\n    borderRadius: 8,\r\n    backgroundColor: '#e0e0e0',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  imageContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: 8,\r\n    overflow: 'hidden',\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: 8,\r\n  },\r\n  fileInputLabel: {\r\n    fontSize: 16,\r\n    color: '#007AFF',\r\n    fontWeight: 'bold',\r\n  },\r\n  updateButton: {\r\n    backgroundColor: 'black',\r\n    padding: 10,\r\n    borderRadius: 8,\r\n    marginTop: 16,\r\n    shadowColor: '#000000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.4,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  buttonText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  redirectButton: {\r\n    backgroundColor: 'black',\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginTop: 15,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.4,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n});\r\n\r\nexport default UpdateProfilePicture;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}