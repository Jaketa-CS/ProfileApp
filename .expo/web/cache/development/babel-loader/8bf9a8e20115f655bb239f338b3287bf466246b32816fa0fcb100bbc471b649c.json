{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImagePicker from 'react-native-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar UpdateProfilePicture = function UpdateProfilePicture(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(require(\"../assets/default-avatar.png\")),\n    _useState2 = _slicedToArray(_useState, 2),\n    profilePicture = _useState2[0],\n    setProfilePicture = _useState2[1];\n  var handleUpdatePicture = function handleUpdatePicture() {\n    ImagePicker.showImagePicker({}, function (response) {\n      if (!response.didCancel && !response.error) {\n        setProfilePicture({\n          uri: response.uri\n        });\n      }\n    });\n  };\n  var handleRedirect = function handleRedirect() {\n    route.params.updateProfilePicture(profilePicture);\n    navigation.goBack();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Update Profile Picture\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.profilePictureContainer,\n      onPress: handleUpdatePicture,\n      children: _jsx(Image, {\n        source: profilePicture,\n        style: styles.profilePicture\n      })\n    }), _jsx(Button, {\n      title: \"Update\",\n      onPress: handleRedirect\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  profilePictureContainer: {\n    marginBottom: 20,\n    borderRadius: 55,\n    overflow: 'hidden',\n    borderColor: '#4CA5FD',\n    borderWidth: 3\n  },\n  profilePicture: {\n    width: 110,\n    height: 110,\n    borderColor: 'white',\n    borderWidth: 2\n  }\n});\nexport default UpdateProfilePicture;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","Image","Button","ImagePicker","jsx","_jsx","jsxs","_jsxs","UpdateProfilePicture","_ref","route","navigation","_useState","require","_useState2","_slicedToArray","profilePicture","setProfilePicture","handleUpdatePicture","showImagePicker","response","didCancel","error","uri","handleRedirect","params","updateProfilePicture","goBack","style","styles","container","children","title","profilePictureContainer","onPress","source","create","flex","alignItems","justifyContent","fontSize","fontWeight","marginBottom","borderRadius","overflow","borderColor","borderWidth","width","height"],"sources":["C:/Users/jteet/Desktop/CODE/profile-app-jteeter/src/UpdateProfilePicture.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Image,\r\n  Button,\r\n} from 'react-native';\r\nimport ImagePicker from 'react-native-image-picker'; // Import the ImagePicker library\r\n\r\nconst UpdateProfilePicture = ({ route, navigation }) => {\r\n  const [profilePicture, setProfilePicture] = useState(\r\n    require('../assets/default-avatar.png')\r\n  );\r\n\r\n  // Function to handle updating the profile picture\r\n  const handleUpdatePicture = () => {\r\n    // Use ImagePicker to prompt the user to pick an image\r\n    ImagePicker.showImagePicker({}, (response) => {\r\n      if (!response.didCancel && !response.error) {\r\n        setProfilePicture({ uri: response.uri });\r\n      }\r\n    });\r\n  };\r\n\r\n  // Function to handle redirecting back to App.js with the updated profile picture\r\n  const handleRedirect = () => {\r\n    // Send the updated profile picture back to App.js\r\n    route.params.updateProfilePicture(profilePicture);\r\n    // Navigate back to App.js\r\n    navigation.goBack();\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Update Profile Picture</Text>\r\n      <TouchableOpacity\r\n        style={styles.profilePictureContainer}\r\n        onPress={handleUpdatePicture}\r\n      >\r\n        <Image source={profilePicture} style={styles.profilePicture} />\r\n      </TouchableOpacity>\r\n      <Button title='Update' onPress={handleRedirect} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  profilePictureContainer: {\r\n    marginBottom: 20,\r\n    borderRadius: 55,\r\n    overflow: 'hidden',\r\n    borderColor: '#4CA5FD',\r\n    borderWidth: 3,\r\n  },\r\n  profilePicture: {\r\n    width: 110,\r\n    height: 110,\r\n    borderColor: 'white',\r\n    borderWidth: 2,\r\n  },\r\n});\r\n\r\nexport default UpdateProfilePicture;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,MAAA;AASxC,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAAC,IAAA,EAA8B;EAAA,IAAxBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EAC/C,IAAAC,SAAA,GAA4ChB,QAAQ,CAClDiB,OAAO,+BAA+B,CACxC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAFMI,cAAc,GAAAF,UAAA;IAAEG,iBAAiB,GAAAH,UAAA;EAKxC,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAEhCf,WAAW,CAACgB,eAAe,CAAC,CAAC,CAAC,EAAE,UAACC,QAAQ,EAAK;MAC5C,IAAI,CAACA,QAAQ,CAACC,SAAS,IAAI,CAACD,QAAQ,CAACE,KAAK,EAAE;QAC1CL,iBAAiB,CAAC;UAAEM,GAAG,EAAEH,QAAQ,CAACG;QAAI,CAAC,CAAC;MAC1C;IACF,CAAC,CAAC;EACJ,CAAC;EAGD,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAE3Bd,KAAK,CAACe,MAAM,CAACC,oBAAoB,CAACV,cAAc,CAAC;IAEjDL,UAAU,CAACgB,MAAM,CAAC,CAAC;EACrB,CAAC;EAED,OACEpB,KAAA,CAACV,IAAI;IAAC+B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B1B,IAAA,CAACP,IAAI;MAAC8B,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAsB,CAAM,CAAC,EACxD1B,IAAA,CAACN,gBAAgB;MACf6B,KAAK,EAAEC,MAAM,CAACI,uBAAwB;MACtCC,OAAO,EAAEhB,mBAAoB;MAAAa,QAAA,EAE7B1B,IAAA,CAACJ,KAAK;QAACkC,MAAM,EAAEnB,cAAe;QAACY,KAAK,EAAEC,MAAM,CAACb;MAAe,CAAE;IAAC,CAC/C,CAAC,EACnBX,IAAA,CAACH,MAAM;MAAC8B,KAAK,EAAC,QAAQ;MAACE,OAAO,EAAEV;IAAe,CAAE,CAAC;EAAA,CAC9C,CAAC;AAEX,CAAC;AAED,IAAMK,MAAM,GAAG7B,UAAU,CAACoC,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDP,KAAK,EAAE;IACLQ,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDT,uBAAuB,EAAE;IACvBS,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE,QAAQ;IAClBC,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE;EACf,CAAC;EACD9B,cAAc,EAAE;IACd+B,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXH,WAAW,EAAE,OAAO;IACpBC,WAAW,EAAE;EACf;AACF,CAAC,CAAC;AAEF,eAAetC,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}