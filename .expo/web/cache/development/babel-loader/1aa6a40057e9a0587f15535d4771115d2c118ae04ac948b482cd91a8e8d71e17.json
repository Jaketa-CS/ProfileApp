{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport UpdateProfilePicture from \"./UpdateProfilePicture\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _React$useState = React.useState(require(\"../assets/default-avatar.png\")),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    profilePicture = _React$useState2[0],\n    setProfilePicture = _React$useState2[1];\n  var handleProfilePictureUpdate = function handleProfilePictureUpdate(newProfilePicture) {\n    setProfilePicture({\n      uri: newProfilePicture\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.title,\n        children: \"Edit Profile\"\n      })\n    }), _jsx(View, {\n      style: styles.profileSection,\n      children: _jsxs(TouchableOpacity, {\n        style: styles.profilePictureButton,\n        onPress: function onPress() {\n          return navigation.navigate('UpdateProfilePicture', {\n            handleProfilePictureUpdate: handleProfilePictureUpdate\n          });\n        },\n        children: [_jsx(View, {\n          style: styles.pencilIconContainer,\n          children: _jsx(FontAwesome5, {\n            name: \"pencil-alt\",\n            style: styles.pencilIcon\n          })\n        }), _jsx(View, {\n          style: styles.profilePictureContainer,\n          children: _jsx(Image, {\n            source: profilePicture,\n            style: styles.profilePicture\n          })\n        })]\n      })\n    })]\n  });\n};\nvar Stack = createStackNavigator();\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerShown: true,\n          headerTitle: '',\n          headerStyle: {\n            borderBottomWidth: 0\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"UpdateProfilePicture\",\n        component: UpdateProfilePicture,\n        options: {\n          headerShown: true,\n          headerTitle: 'Update Profile Picture',\n          headerStyle: {\n            borderBottomWidth: 0\n          }\n        }\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    padding: 15,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#4CA5FD'\n  },\n  profileSection: {\n    padding: 25,\n    margin: 20,\n    alignItems: 'center'\n  },\n  profilePictureButton: {\n    marginBottom: 20,\n    color: 'black',\n    position: 'relative'\n  },\n  profilePictureContainer: {\n    position: 'relative',\n    borderRadius: 55,\n    overflow: 'hidden',\n    borderColor: '#4CA5FD',\n    borderWidth: 3\n  },\n  profilePicture: {\n    width: 110,\n    height: 110,\n    borderColor: 'white',\n    borderWidth: 2\n  },\n  pencilIconContainer: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: [{\n      translateX: 35\n    }, {\n      translateY: -50\n    }],\n    borderRadius: 15,\n    zIndex: 1,\n    padding: 5,\n    backgroundColor: 'white'\n  },\n  pencilIcon: {\n    color: '#4CA5FD',\n    fontSize: 17\n  },\n  nameAndButtonContainer: {\n    alignItems: 'flex-start',\n    width: '100%'\n  },\n  profileTitleText: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    color: '#C8CEE3'\n  },\n  editButton: {\n    backgroundColor: 'white',\n    alignSelf: 'flex-start',\n    width: 600,\n    height: 70,\n    borderBottomColor: '#C8CEE3',\n    borderBottomWidth: 2\n  },\n  itemContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%'\n  },\n  itemText: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  itemLeft: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  itemRight: {\n    fontSize: 60,\n    color: '#C8CEE3'\n  }\n});\nexport default App;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","StyleSheet","Image","FontAwesome5","NavigationContainer","createStackNavigator","UpdateProfilePicture","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","_React$useState","useState","require","_React$useState2","_slicedToArray","profilePicture","setProfilePicture","handleProfilePictureUpdate","newProfilePicture","uri","style","styles","container","children","header","title","profileSection","profilePictureButton","onPress","navigate","pencilIconContainer","name","pencilIcon","profilePictureContainer","source","Stack","App","Navigator","initialRouteName","Screen","component","options","headerShown","headerTitle","headerStyle","borderBottomWidth","create","flex","backgroundColor","alignItems","justifyContent","padding","fontSize","fontWeight","color","margin","marginBottom","position","borderRadius","overflow","borderColor","borderWidth","width","height","top","left","transform","translateX","translateY","zIndex","nameAndButtonContainer","profileTitleText","editButton","alignSelf","borderBottomColor","itemContainer","flexDirection","itemText","itemLeft","itemRight"],"sources":["C:/Users/jteet/Desktop/CODE/profile-app-jteeter/src/App.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Image } from 'react-native';\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport UpdateProfilePicture from './UpdateProfilePicture';\n\nconst HomeScreen = ({ navigation }) => {\n  const [profilePicture, setProfilePicture] = React.useState(\n    require('../assets/default-avatar.png')\n  );\n\n  const handleProfilePictureUpdate = (newProfilePicture) => {\n    setProfilePicture({ uri: newProfilePicture });\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Edit Profile</Text>\n      </View>\n\n      <View style={styles.profileSection}>\n        <TouchableOpacity\n          style={styles.profilePictureButton}\n          onPress={() =>\n            navigation.navigate('UpdateProfilePicture', {\n              handleProfilePictureUpdate,\n            })\n          }\n        >\n          <View style={styles.pencilIconContainer}>\n            <FontAwesome5 name='pencil-alt' style={styles.pencilIcon} />\n          </View>\n          <View style={styles.profilePictureContainer}>\n            <Image source={profilePicture} style={styles.profilePicture} />\n          </View>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName='Home'>\n        <Stack.Screen\n          name='Home'\n          component={HomeScreen}\n          options={{\n            headerShown: true,\n            headerTitle: '',\n            headerStyle: { borderBottomWidth: 0 },\n          }}\n        />\n        <Stack.Screen\n          name='UpdateProfilePicture'\n          component={UpdateProfilePicture}\n          options={{\n            headerShown: true,\n            headerTitle: 'Update Profile Picture',\n            headerStyle: { borderBottomWidth: 0 },\n          }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    padding: 15,\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#4CA5FD',\n  },\n  profileSection: {\n    padding: 25,\n    margin: 20,\n    alignItems: 'center',\n  },\n  profilePictureButton: {\n    marginBottom: 20,\n    color: 'black',\n    position: 'relative',\n  },\n  profilePictureContainer: {\n    position: 'relative',\n    borderRadius: 55,\n    overflow: 'hidden',\n    borderColor: '#4CA5FD',\n    borderWidth: 3,\n  },\n  profilePicture: {\n    width: 110,\n    height: 110,\n    borderColor: 'white',\n    borderWidth: 2,\n  },\n  pencilIconContainer: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: [{ translateX: 35 }, { translateY: -50 }],\n    borderRadius: 15,\n    zIndex: 1,\n    padding: 5,\n    backgroundColor: 'white',\n  },\n  pencilIcon: {\n    color: '#4CA5FD',\n    fontSize: 17,\n  },\n  nameAndButtonContainer: {\n    alignItems: 'flex-start',\n    width: '100%',\n  },\n  profileTitleText: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    color: '#C8CEE3',\n  },\n  editButton: {\n    backgroundColor: 'white',\n    alignSelf: 'flex-start',\n    width: 600,\n    height: 70,\n    borderBottomColor: '#C8CEE3',\n    borderBottomWidth: 2,\n  },\n  itemContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  itemText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  itemLeft: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  itemRight: {\n    fontSize: 60,\n    color: '#C8CEE3',\n  },\n});\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}